<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace用于绑定Dao接口 -->
<mapper namespace="com.education.hjj.bz.mapper.StudentDemandMapper">

	<!-- 用用查询映射结果 -->
	<resultMap id="studentDemandsResultMap" type="com.education.hjj.bz.entity.vo.StudentDemandVo" >
		<!-- column代表数据库列名，property代表实体类属性名 -->
		<result column="sid" property="sid"/>
		<result column="student_id" property="studentId"/>
		<result column="student_name" property="studentName"/>
		<result column="demand_grade" property="demandGrade"/>
		<result column="subject_id" property="subjectId"/>
		<result column="order_start" property="orderStart"/>
		<result column="week_num" property="weekNum"/>
		<result column="class_num" property="classNum"/>
		<result column="time_range" property="timeRange"/>
		<result column="order_money" property="orderMoney"/>
		<result column="demand_desc" property="demandDesc"/>
		<result column="demand_address" property="demandAddress"/>
		<result column="demand_grade" property="demandGrade"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="create_user" property="createUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_user" property="updateUser"/>

		<result column="demand_type" property="demandType"/>
	</resultMap>
	
	
    <select id="querystudentDemands"  resultMap="studentDemandsResultMap" parameterType="com.education.hjj.bz.entity.StudentDemandPo">    
        select
        	sd.*
		from
			student_demand sd
		where
			1=1
		<if test='sid != null and sid != ""'>
            AND sd.sid = #{sid}
        </if>
        <if test='demandGrade != null and demandGrade != ""'>
            AND sd.demand_grade = #{demandGrade}
        </if> 
        <if test='demandBranch != null and demandBranch != ""'>
            AND sd.demand_branch = #{demandBranch}
        </if> 
        <if test='studentArea != null and studentArea != ""'>
            AND sd.student_area = #{studentArea}
        </if> 

        order by 
        	sd.create_time desc
        <if test="offset != null">
            <![CDATA[
                limit #{pageSize} offset #{offset}
            ]]>
        </if>
    </select>
	
	<select id="listDemandAndTeacher" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm" resultMap="studentDemandsResultMap">
		SELECT
			sd.demand_type
			,sdc.teacher_id
		FROM student_demand sd
		LEFT join student_demand_connect sdc
		ON sd.sid = sdc.demand_id
		WHERE sdc.delete_status = 0
		AND sd.sid = #{demandId}
	</select>

	<select id="listDemand" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm" resultMap="studentDemandsResultMap">
		select
		   sd.sid,
		   sd.create_time,
		   st.student_name,
		   sd.time_range,
		   sd.class_num,
		   sd.demand_desc,
		   sd.demand_grade,
		   sd.subject_id,
		   sd.status
		from student_demand sd
		inner join student st
		on sd.student_id = st.sid
		WHERE st.delete_status = 0
		AND sd.student_id = #{studentId}
		order by
			sd.create_time desc
		<if test="offset != null">
			<![CDATA[
                limit #{pageSize} offset #{offset}
            ]]>
		</if>
	</select>

	<update id="openDemand" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm">
	<selectKey resultType="java.lang.Long" keyProperty="sid" >
		SELECT @@IDENTITY AS sid
	</selectKey>
		UPDATE student_demand
		SET demand_type = 2,
			update_time = #{updateTime}
		WHERE sid = #{demandId}
	</update>


    <insert id="addStudentDemandByTeacher" parameterType="com.education.hjj.bz.formBean.StudentDemandForm">

		<selectKey resultType="java.lang.Long" keyProperty="sid" >
			SELECT @@IDENTITY AS sid
		</selectKey>
        INSERT INTO student_demand(
			student_id,
			demand_address,
			demand_grade,
			subject_id,
			order_start,
        	week_num,
        	class_num,
        	time_range,
        	order_type,
        	order_money,
        	demand_desc,
        	status,
        	create_time,
        	create_user,
        	update_time,
        	update_user
        	)
        VALUES (
        	#{studentId},
        	#{demandAddress},
        	#{demandGrade},
        	#{subjectId},
        	#{orderStart},
        	#{weekNum},
        	#{classNum},
        	#{timeRange},
        	#{orderType},
        	#{orderMoney},
        	#{demandDesc},
        	#{status},
        	#{createTime},
        	#{createUser},
        	#{updateTime},
        	#{updateUser}
        )
    </insert>

</mapper>