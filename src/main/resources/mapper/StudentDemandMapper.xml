<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace用于绑定Dao接口 -->
<mapper namespace="com.education.hjj.bz.mapper.StudentDemandMapper">

	<!-- 用用查询映射结果 -->
	<resultMap id="studentDemandsResultMap" type="com.education.hjj.bz.entity.vo.StudentDemandVo" >
		<!-- column代表数据库列名，property代表实体类属性名 -->
		<result column="sid" property="sid"/>
		<result column="student_id" property="studentId"/>
		<result column="student_name" property="studentName"/>
		<result column="demand_grade" property="demandGrade"/>
		<result column="subject_id" property="subjectId"/>
		<result column="order_start" property="orderStart"/>
		<result column="week_num" property="weekNum"/>
		<result column="class_num" property="classNum"/>
		<result column="time_range" property="timeRange"/>
		<result column="order_money" property="orderMoney"/>
		<result column="demand_desc" property="demandDesc"/>
		<result column="demand_address" property="demandAddress"/>
		<result column="demand_grade" property="demandGrade"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="create_user" property="createUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="current_week_day" property="currentWeekDay"/>
		<result property="paymentStreamId" column="payment_stream_id"/>

		<result column="teacher_id" property="teacherId"/>

		<result column="demand_type" property="demandType"/>
		<result column="parameter_id" property="parameterId"/>
		<result column="demand_signUp_num" property="demandSignUpNum"/>
		<result column="teach_grade_id" property="teachGradeId"/>
		<result column="teach_grade_name" property="teachGradeName"/>
		<result column="teach_branch_id" property="teachBranchId"/>
		<result column="teach_branch_name" property="teachBranchName"/>
		<result column="order_teach_time" property="orderTeachTime"/>
		<result column="demandSignStatus" property="demandSignStatus"/>
		
		<result column="parameterName" property="parameterName"/>
	</resultMap>
	
	
    <select id="querystudentDemands"  resultMap="studentDemandsResultMap" parameterType="com.education.hjj.bz.entity.StudentDemandPo">    
        select
        	sd.*
		from
			student_demand sd
		where
			1=1
		<if test='sid != null and sid != ""'>
            AND sd.sid = #{sid}
        </if>
        <if test='demandGrade != null and demandGrade != ""'>
            AND sd.demand_grade = #{demandGrade}
        </if> 
        <if test='demandBranch != null and demandBranch != ""'>
            AND sd.demand_branch = #{demandBranch}
        </if> 
        <if test='studentArea != null and studentArea != ""'>
            AND sd.student_area = #{studentArea}
        </if> 

        order by 
        	sd.create_time desc
        <if test="offset != null">
            <![CDATA[
                limit #{pageSize} offset #{offset}
            ]]>
        </if>
    </select>

	<select id="findMaxSid" resultType="java.lang.Long">
		SELECT MAX(sid)
		FROM student_demand
	</select>
	<select id="listDemandAndTeacher" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm" resultMap="studentDemandsResultMap">
		SELECT
			sd.demand_type
			,sdc.teacher_id
		FROM student_demand sd
		LEFT join student_demand_connect sdc
		ON sd.sid = sdc.demand_id
		WHERE sdc.delete_status = 0
		AND sd.sid = #{demandId}
		LIMIT 1
	</select>

	<select id="findDemandByCourseId" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
		SELECT sd.payment_stream_id
		    , sd.student_id
			, st.student_name
		FROM student_demand sd
		INNER JOIN
			demand_course_info dci
		ON sd.sid = dci.demand_id
		AND dci.delete_status = 0
		INNER JOIN
			student st
		ON sd.student_id = st.sid
		WHERE dci.sid = #{sid}
	</select>

	<select id="listDemand" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm" resultMap="studentDemandsResultMap">
		select
		   sd.sid,
		   sd.create_time,
		   st.student_name,
		   sd.time_range,
		   sd.class_num,
		   sd.demand_desc,
		   sd.demand_grade,
		   sd.subject_id,
		   sd.status,
           sd.demand_type,
		   sd.payment_stream_id
		from student_demand sd
		inner join student st
		on sd.student_id = st.sid
		WHERE st.delete_status = 0
		AND st.parent_phone_num = #{parentPhoneNum}
		AND sd.status <![CDATA[<]]> 3
		order by
			sd.create_time desc
		<if test="offset != null">
			<![CDATA[
                limit #{pageSize} offset #{offset}
            ]]>
		</if>
	</select>

	<update id="openDemand" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm">
	<selectKey resultType="java.lang.Long" keyProperty="sid" >
		SELECT @@IDENTITY AS sid
	</selectKey>
		UPDATE student_demand
		SET demand_type = 2,
			update_time = #{updateTime}
		WHERE sid = #{demandId}
	</update>


    <insert id="addStudentDemandByTeacher" parameterType="com.education.hjj.bz.formBean.StudentDemandForm"
			>
		<selectKey keyProperty="sid" resultType="java.lang.Long" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
        INSERT INTO student_demand(
			student_id,
			demand_address,
			demand_grade,
			subject_id,
			order_start,
        	week_num,
        	class_num,
        	time_range,
        	order_type,
        	order_money,
        	demand_desc,
			demand_type,
			parameter_id,
        	status,
            current_week_day,
            payment_stream_id,
        	create_time,
        	create_user,
        	update_time,
        	update_user
        	)
        VALUES (
        	#{studentId},
        	#{demandAddress},
        	#{demandGrade},
        	#{subjectId},
        	#{orderStart},
        	#{weekNum},
        	#{classNum},
        	#{timeRange},
        	#{orderType},
        	#{orderMoney},
        	#{demandDesc},
        	#{demandType},
        	#{parameterId},
        	#{status},
        	#{currentWeekDay},
        	#{paymentStreamId},
        	#{createTime},
        	#{createUser},
        	#{updateTime},
        	#{updateUser}

        ); select @@IDENTITY;
    </insert>

	<!-- 教员首页查询所有的需求订单 -->
	<select id="queryAllStudentDemandList" parameterType="com.education.hjj.bz.formBean.StudentDemandForm" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			sd.demand_address,
			tg.teach_grade_name,
			tb.teach_branch_name,
			sd.class_num,
			sd.time_range,
			sd.demand_desc,
			date_format(sd.create_time, '%Y-%m-%d') as create_time,
			demand_signUp_num
		FROM
			student_demand sd
		LEFT JOIN
			teach_grade tg
		ON	
			sd.demand_grade = tg.teach_grade_id 
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		WHERE
			1=1
		<if test="demandGrade != null">
			AND sd.demand_grade= #{demandGrade}
     	</if>
     	<if test="subjectId != null">
			AND sd.subject_id= #{subjectId}
     	</if>
     	<if test="parameterId != null">
			AND sd.parameter_id= #{parameterId}
     	</if>
     	order by sd.create_time desc
     	<if test="offset != null">
			<![CDATA[
                limit #{pageSize} offset #{offset}
            ]]>
		</if>
    </select>
    
    <!-- 教员首页查询所有的需求订单10条 -->
	<select id="queryAllStudentDemandListBy10" parameterType="com.education.hjj.bz.formBean.StudentDemandForm" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			sd.demand_address,
			tg.teach_grade_name,
			tb.teach_branch_name,
			sd.class_num,
			sd.time_range,
			sd.demand_desc,
			sd.create_time,
			demand_signUp_num
		FROM
			student_demand sd
		LEFT JOIN
			teach_grade tg
		ON	
			sd.demand_grade = tg.teach_grade_id 
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		WHERE
			1=1
     		
		order by sd.create_time desc
		
		limit 10
    </select>

    <update id="updateOldDemandToNew" parameterType="com.education.hjj.bz.formBean.StudentDemandForm" >

        UPDATE student_demand
        SET   order_start = #{orderStart}
              ,week_num = #{weekNum}
              ,time_range = #{timeRange}
              ,order_type = #{orderType}
              ,order_money = #{orderMoney}
              ,current_week_day = #{currentWeekDay}
              ,create_time = #{createTime}
        where sid = #{demandId}

    </update>

    <select id="findStudentDemandInfo" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
        SELECT
        	sd.*,
        	tea.teacher_id,
        	s.student_name,
        	tb.teach_branch_name
        FROM
        	student_demand sd
		INNER JOIN teach_branch tb
		on sd.demand_grade = tb.teach_grade_id
		and sd.subject_id = tb.teach_branch_id
        INNER JOIN
        	student_demand_connect sdc
        ON
        	sd.sid = sdc.demand_id
        AND sdc.status in (4,7)
        INNER JOIN
        	teacher tea
        ON
        	sdc.teacher_id = tea.teacher_id
        left join
        	student s
        on
        	sd.student_id = s.sid

        WHERE
        	sd.sid = #{demanId}
    </select>

    <!-- 查询需求订单详情 -->
    <select id="queryStudentDemandDetailBySid" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			sd.demand_address,
			sd.subject_id as teach_grade_id,
			tg.teach_grade_name,
			sd.demand_grade as teach_branch_id,
			tb.teach_branch_name,
			sd.class_num,
			sd.time_range,
			sd.demand_desc,
			date_format(sd.create_time, '%Y-%m-%d') as create_time,
			sd.demand_signUp_num,
			sd.current_week_day,
			sd.parameter_id,
			p.name as parameterName,
			sd.demand_type
		FROM
			student_demand sd
		LEFT JOIN
			teach_grade tg
		ON	
			sd.demand_grade = tg.teach_grade_id 
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			parameter p
		ON
			sd.parameter_id = p.parameter_id
		WHERE
			1=1
		and
			sd.sid = #{sid}
    </select>
    
     <!-- 查询需求订单详情的订单报名情况 -->
    <select id="queryStudentDemandDetailSignStatusBySid" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			sd.demand_address,
			sd.subject_id as teach_grade_id,
			tg.teach_grade_name,
			sd.demand_grade as teach_branch_id,
			tb.teach_branch_name,
			sd.class_num,
			sd.time_range,
			sd.demand_desc,
			date_format(sd.create_time, '%Y-%m-%d') as create_time,
			sd.demand_signUp_num,
			sd.current_week_day,
			sd.parameter_id,
			p.name as parameterName,
			sdc.teacher_id,
			sdc.`status` as demandSignStatus
		FROM
			student_demand sd
		LEFT JOIN
			teach_grade tg
		ON	
			sd.demand_grade = tg.teach_grade_id 
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			parameter p
		ON
			sd.parameter_id = p.parameter_id
		LEFT JOIN	
			student_demand_connect sdc
		ON
			sd.sid = sdc.demandId
		WHERE
			1=1
		and
			sd.sid = #{sid}
			
    </select>
    
    <!-- 新的试讲订单,还没确定试讲时间 -->
    <select id="queryNewTrialOrderList" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			tg.teach_grade_name,
			tb.teach_branch_name,
			sd.create_time,
			sdc.status as demandSignStatus
		FROM
			student_demand_connect sdc
		LEFT JOIN
			student_demand sd
		ON
			sdc.demand_id = sd.sid
		LEFT JOIN
			teach_grade tg
		ON
			sd.demand_grade = tg.teach_grade_id
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		WHERE
			sdc.`status` = 1
		AND
			sdc.teacher_id = #{teacherId}
		ORDER BY
			sd.create_time desc
    </select>
    
    <!-- 适合我的家教需求订单列表 -->
    <select id="queryFitTeacherOrderList" parameterType="java.lang.Integer" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			sd.demand_address,
			tg.teach_grade_name,
			tb.teach_branch_name,
			sd.class_num,
			sd.time_range,
			sd.demand_desc,
			date_format(sd.create_time, '%Y-%m-%d') as create_time,
			demand_signUp_num

		FROM
			student_demand sd
		LEFT JOIN
			teach_grade tg
		ON	
			sd.demand_grade = tg.teach_grade_id 
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			student_demand_connect sdc
		ON
			sd.sid = sdc.demand_id
		LEFT JOIN
			teacher t
		ON
			sdc.teacher_id = t.teacher_id
		AND
			sd.parameter_id like '%t.teach_address%'
		AND
			(sd.subject_id like '%t.teach_brance%'
		OR
			sd.subject_id like '%t.teach_branch_slave%'
		)
		AND
			sd.demand_grade like '%t.teach_grade%'
		AND
			t.`status` = 1
		WHERE
			sd.demand_type = 2
		AND
			sdc.order_teach_time is null
		AND
			sdc.teacher_id = #{teacherId}
		ORDER BY
			sd.create_time desc
    </select>
    
    <!-- 查询用户所有的订单 -->
    <select id="queryUserDemandsList" parameterType="java.util.Map" resultMap="studentDemandsResultMap">
    	SELECT
			sd.sid,
			s.student_name,
			tg.teach_grade_name,
			tb.teach_branch_name,
			date_format(sd.create_time, '%Y-%m-%d %T') as create_time,
			sd.order_money,
			sdc.order_teach_time,
			sdc.`status` as demandSignStatus
		FROM
			student_demand_connect sdc
		LEFT JOIN
			student_demand sd
		ON
			sdc.demand_id = sd.sid
		LEFT JOIN
			teach_grade tg
		ON
			sd.demand_grade = tg.teach_grade_id
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			student s
		ON
			sd.student_id = s.sid
		WHERE
			sdc.teacher_id = #{teacherId}
			
		<if test="list != null">
			AND sdc.status in 
			
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
		       #{item}
		   </foreach>
		   
     	</if>
     	
		ORDER BY
			sd.create_time desc
		<if test="offset != null">
            <![CDATA[
               limit #{pageSize} offset #{offset}
            ]]>
        </if>
    </select>
    
	<resultMap id="studentDemandsDetailResultMap" type="com.education.hjj.bz.entity.vo.StudentDemandVo" >
		<!-- column代表数据库列名，property代表实体类属性名 -->
		<result column="sid" property="sid"/>
		<result column="student_name" property="studentName"/>
		<result column="teacher_name" property="teachName"/>
		<result column="class_num" property="classNum"/>
		<result column="week_num" property="weekNum"/>
		<result column="time_num" property="timeNum"/>
		<result column="time_range" property="timeRange"/>
		<result column="order_money" property="orderMoney"/>
		<result column="demand_desc" property="demandDesc"/>
		<result column="demand_address" property="demandAddress"/>
		<result column="create_time" property="createTime"/>
		<result column="sign_time" property="signTime"/>
		<result column="teach_grade_id" property="teachGradeId"/>
		<result column="teach_grade_name" property="teachGradeName"/>
		<result column="teach_branch_id" property="teachBranchId"/>
		<result column="teach_branch_name" property="teachBranchName"/>
		<result column="order_teach_time" property="orderTeachTime"/>
		<result column="order_start" property="orderStart"/>
		<result column="parent_phone_num" property="parentPhoneNum"/>
		<result column="demandSignStatus" property="demandSignStatus"/>
		<result column="status" property="status"/>
		<result column="classId" property="classId"/>
		<result column="appraise" property="appraise"/>
		<result column="parameter_id" property="parameterId"/>
		<result column="parameterName" property="parameterName"/>
	</resultMap>
    
    <!-- 订单详情 -->
     <select id ="queryStudemtDemandDetail" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm" resultMap="studentDemandsDetailResultMap">
    	SELECT
			sd.sid,
			s.student_name,
			sd.subject_id as teach_grade_id,
			tg.teach_grade_name,
			sd.demand_grade as teach_branch_id,
			tb.teach_branch_name,
			date_format(sd.create_time, '%Y-%m-%d %T') as create_time,
			sd.order_money,
			sdc.order_teach_time,
			sd.order_start,
			date_format(sdc.create_time, '%Y-%m-%d %T') as sign_time,
			sd.demand_address,
			sd.time_range,
			t.teach_time,
			sd.class_num,
			sd.week_num,
			sd.demand_desc,
			s.parent_phone_num,
			sdc.status as demandSignStatus,
			appraise,
			sd.parameter_id,
			p.name as parameterName
			
		FROM
			student_demand_connect sdc
		LEFT JOIN
			student_demand sd
		ON
			sdc.demand_id = sd.sid
		LEFT JOIN
			teach_grade tg
		ON
			sd.demand_grade = tg.teach_grade_id
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			student s
		ON
			sd.student_id = s.sid
		LEFT JOIN
			parameter p
		ON
			sd.parameter_id = p.parameter_id
		LEFT JOIN
			teacher t
		ON
			sdc.teacher_id = t.teacher_id
		WHERE
			
			sd.sid = #{demandId}
		and
			sdc.status = #{status}
		AND
			sdc.teacher_id = #{teacherId}
		ORDER BY
			sd.create_time desc
    </select>
    
    <!-- 教员接受学员订单,并更新报名表试讲时间和订单状态 -->
    <update id="updateNewTrialDemandTime" parameterType="com.education.hjj.bz.formBean.StudentDemandConnectForm">
    	UPDATE 
    		student_demand_connect
		SET 
			status = #{status},
			order_teach_time = #{orderTeachTime},
			update_time = #{updateTime}
			
		WHERE 
			demand_id = #{demandId}
		and
			teacher_id = #{teacherId}
    </update>
    
    <!-- 教员接受学员订单,并更新订单表订单状态 -->
    <update id="updateNewTrialDemandStatus" parameterType="com.education.hjj.bz.formBean.StudentDemandForm">
    	UPDATE 
    		student_demand
		SET 
			status = #{status},
			update_time = #{updateTime}
			
		WHERE sid = #{demandId}
    </update>
    
    <!-- 教员接受学员订单,并更新订单表订单状态 -->
    <update id="updateDemandSignNum" parameterType="com.education.hjj.bz.entity.StudentDemandPo">
    	UPDATE 
    		student_demand
		SET 
			demand_signUp_num = #{demandSignUpNum},
			update_time = #{updateTime}
			
		WHERE sid = #{demandId}
    </update>

	<!--结束订单-->
	<update id="endDemand" parameterType="integer">
		UPDATE
			student_demand
		SET status = 3
		WHERE sid = #{demandId}
	</update>
    
    <!-- 查询教员课程表 -->
    <select id="queryTimeTableByTeacherId" parameterType="com.education.hjj.bz.entity.StudentDemandPo" resultMap="studentDemandsDetailResultMap">
    	select 
			sd.sid,
			dci.sid as classId,
			t.`name` as teacher_name,
			s.student_name,
			tb.teach_branch_name,
			dci.order_teach_time,
			sdc.`status` as demandSignStatus,
			dci.week_num,
			dci.time_num,
			dci.status,
			sd.order_start
		FROM
			student_demand_connect sdc
		LEFT JOIN
			student_demand sd
		ON
			sdc.demand_id = sd.sid
		LEFT JOIN
			student s
		ON
			sd.student_id =s.sid
		LEFT JOIN
			teacher t
		ON
			sdc.teacher_id = t.teacher_id
		LEFT JOIN
			teach_branch tb
		ON
			sd.subject_id = tb.teach_branch_id
		LEFT JOIN
			demand_course_info dci
		ON	
			sd.sid = dci.demand_id
		WHERE
			sdc.`status` = 4 
		AND
			sdc.teacher_id = #{teacherId}
		AND
			dci.order_teach_time >= #{orderStartDate}
		<![CDATA[
		AND
			dci.order_teach_time <= #{orderEndDate}
		]]>
    </select>	
    
    <!-- 教员打卡(学员节课通用),将该节课的状态改为未结课 -->
    <update id="updateTimeTableByTeacherId" parameterType="com.education.hjj.bz.entity.StudentDemandPo">
    	update
    		demand_course_info
    	set
    		status = #{status},
			update_time = #{updateTime}
			<if test="teacherId != null">
				,update_user = #{teacherId}
			</if>
			<if test="studentId != null">
				,update_user = #{studentId}
			</if>
    	where
    		sid= #{classId}	
    		
    </update>
    
</mapper>